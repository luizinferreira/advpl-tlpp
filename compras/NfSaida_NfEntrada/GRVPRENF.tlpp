#Include 'Protheus.ch'
#Include 'FWMVCDef.ch'
#Include 'topconn.ch'
#Include 'tbiconn.ch'
#Include 'APWizard.ch'

/*/{Protheus.doc} 

Parametros recuperados do ponto de entrada MT410BRW().
GRVPRENF(cFilOri, cPedVenda,cFilDest,cForn,cLoja,cNota,cSerie,cCondPag)

@type user function
@author Luiz Eduardo
@since 25/02/2025
@Description = Cria a NF de Entrada na Filial de Destino informada no pedido de venda.
/*/


#Define ENTER 	Chr(13) + Chr(10)

User Function GRVPRENF(cFilOri, cPedVenda,cFilDest,cForn,cLoja,cNota,cSerie,cCondPag)

	Local cMensagem   := "Deseja criar uma Pre Nota de Entrada para este Cliente/Fornecedor?"
	Local aItensEnv   := {}
	Local aCabec			:= {}


	IF cNota == "         "
		MsgAlert("Funcao permitida apenas para Pedido de Venda que ja tenha sido Faturado.")
		return
	ELSEIF cFilDest == "    "
		MsgAlert("Informe a Filial de Entrada neste Pedido de Venda.")
		return
	ELSEIF cForn == "      "
		MsgAlert("Informe um Fornecedor + Loja neste Pedido de Venda.")
		return
	ELSE

		IF FwAlertNoYes(cMensagem,"Cria Pre Nota de Entrada")

		ENDIF

	ENDIF

	SC6->(dbSetOrder(1))
	SC6->(dbSeek(cFilOri+cPedVenda+"01"))
	do while SC6->(!Eof()) .and. SC6->(C6_FILIAL+C6_NUM) == cFilOri+cPedVenda

		aAdd(aItensEnv,{SC6->C6_ITEM, SC6->C6_PRODUTO, SC6->C6_UM, SC6->C6_QTDVEN, SC6->C6_PRCVEN, SC6->C6_VALOR, SC6->C6_LOCAL,SC6->C6_LOTECTL})

		SC6->(DbSkip())

	enddo

	IF LEN(aItensEnv) > 0
		aAdd(aCabec,{cFilDest,cNota,cSerie,cForn,cLoja,cCondPag})
	ENDIF

	IF LEN(aCabec) == 1
		aRetorno := GeraPreNf(aCabec,aItensEnv,cPedVenda)
	EndIF

Return

static function GeraPreNf(aCabec,aItensEnv,cPedVenda)
	Local aCab			:= {}
	Local aLinha		:= {}
	Local lGerou		:= .F.
	Local i

	Private lMsErroAuto 	:= .F.
	Private lAutoErrNoFile	:= .F.

	cModulo := "COM"
	nModulo := 2
	cFilAnt := aCabec[1][1]

	aCab := {{"F1_FILIAL"		, aCabec[1][1]		, Nil},;
		{"F1_TIPO"				,	"N"				, Nil},;
		{"F1_FORMUL" 			,	"N"				, Nil},;
		{"F1_DOC"				, aCabec[1][2]		, Nil},;
		{"F1_SERIE"				, aCabec[1][3]		, Nil},;
		{"F1_EMISSAO"			,	dDataBase		, Nil},;
		{"F1_FORNECE"			, aCabec[1][4]		, Nil},;
		{"F1_LOJA"				, aCabec[1][5]		, Nil},;
		{"F1_ESPECIE"			, "SPED"			, Nil},;
		{"F1_COND"				, aCabec[1][6]		, Nil},;
		{"F1_MOEDA"				, 1					, Nil},;
		{"F1_TXMOEDA"			, 1					, Nil};
		}


	For i := 1 To Len(aItensEnv)
		aAdd(aLinha,{{"D1_COD"    	,aItensEnv[i][2]												, Nil },;
			{"D1_UM"				,aItensEnv[i][3]												, Nil},;
			{"D1_QUANT"				,aItensEnv[i][4]												, Nil},;
			{"D1_VUNIT"				,aItensEnv[i][5]												, Nil},;
			{"D1_TOTAL"				,aItensEnv[i][6]												, Nil},;
			{"D1_CODDIS"			,"Ped. Venda: "+cPedVenda+" NF SAIDA: "+aCabec[1][2]			, Nil},;
			{"D1_LOCAL"				,aItensEnv[i][7]												, Nil},;
			{"D1_LOTECTL"			,aItensEnv[i][8]												, Nil},;
			{"D1_NUMPV"				,cPedVenda														, Nil},;
			{"D1_ITEMPV"			,aItensEnv[i][1]												, Nil},;
			{"D1_EMISSAO" 			,dDataBase														, Nil},;
			{"D1_DTDIGIT"			,dDataBase														, Nil}})

	next


	MSExecAuto({|x,y,z| MATA140(x,y,z)},aCab,aLinha,3)

	if lMsErroAuto
		MostraErro()
		lMostraErro := .T.
		FWAlertError("Ocorreu um erro na Inclusao do Documento de Entrada, contate o Administrador do Sistema.")
	else
		lGerou := .T.

		FWAlertSuccess("Inclusao do Documento de Entrada Concluida com Sucesso.")

	endif

Return

